C51 COMPILER V9.60.0.0   OLED                                                              05/17/2020 11:34:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: D:\keil_c51\C51\BIN\C51.EXE SRC\oled.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DE
                    -BUG OBJECTEXTEND PRINT(.\oled.lst) TABS(2) OBJECT(oled.obj)

line level    source

   1          
   2          #include "oled.h"
   3          //#include "stdlib.h"
   4          //#include "oledfont.h"    
   5          //#include "delay.h"
   6          //OLED的显存
   7          //存放格式如下.
   8          //[0]0 1 2 3 ... 127  
   9          //[1]0 1 2 3 ... 127  
  10          //[2]0 1 2 3 ... 127  
  11          //[3]0 1 2 3 ... 127  
  12          //[4]0 1 2 3 ... 127  
  13          //[5]0 1 2 3 ... 127  
  14          //[6]0 1 2 3 ... 127  
  15          //[7]0 1 2 3 ... 127         
  16          void delay_ms(unsigned int ms)
  17          {                         
  18   1        unsigned int a;
  19   1        while(ms)
  20   1        {
  21   2          a=1800;
  22   2          while(a--);
  23   2          ms--;
  24   2        }
  25   1        return;
  26   1      }
  27          /**********************************************
  28          //IIC Start
  29          **********************************************/
  30          void IIC_Start()
  31          {
  32   1      
  33   1        OLED_SCLK_Set() ;
  34   1        OLED_SDIN_Set();
  35   1        OLED_SDIN_Clr();
  36   1        OLED_SCLK_Clr();
  37   1      }
  38          
  39          /**********************************************
  40          //IIC Stop
  41          **********************************************/
  42          void IIC_Stop()
  43          {
  44   1      OLED_SCLK_Set() ;
  45   1      //  OLED_SCLK_Clr();
  46   1        OLED_SDIN_Clr();
  47   1        OLED_SDIN_Set();
  48   1        
  49   1      }
  50          
  51          void IIC_Wait_Ack()
  52          {
  53   1      
  54   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
C51 COMPILER V9.60.0.0   OLED                                                              05/17/2020 11:34:29 PAGE 2   

  55   1        //GPIOB->CRH |= 0x00080000;
  56   1      //  OLED_SDA = 1;
  57   1      //  delay_us(1);
  58   1        //OLED_SCL = 1;
  59   1        //delay_us(50000);
  60   1      /*  while(1)
  61   1        {
  62   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  63   1          {
  64   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  65   1            //GPIOB->CRH |= 0x00030000;
  66   1            return;
  67   1          }
  68   1        }
  69   1      */
  70   1        OLED_SCLK_Set() ;
  71   1        OLED_SCLK_Clr();
  72   1      }
  73          /**********************************************
  74          // IIC Write byte
  75          **********************************************/
  76          
  77          void Write_IIC_Byte(unsigned char IIC_Byte)
  78          {
  79   1        unsigned char i;
  80   1        unsigned char m,da;
  81   1        da=IIC_Byte;
  82   1        OLED_SCLK_Clr();
  83   1        for(i=0;i<8;i++)    
  84   1        {
  85   2          m=da;
  86   2          //  OLED_SCLK_Clr();
  87   2          m=m&0x80;
  88   2          if(m==0x80){OLED_SDIN_Set();}
  89   2          else OLED_SDIN_Clr();
  90   2          da=da<<1;
  91   2          OLED_SCLK_Set();
  92   2          OLED_SCLK_Clr();
  93   2          }
  94   1      }
  95          /**********************************************
  96          // IIC Write Command
  97          **********************************************/
  98          void Write_IIC_Command(unsigned char IIC_Command)
  99          {
 100   1         IIC_Start();
 101   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 102   1        IIC_Wait_Ack(); 
 103   1         Write_IIC_Byte(0x00);      //write command
 104   1        IIC_Wait_Ack(); 
 105   1         Write_IIC_Byte(IIC_Command); 
 106   1        IIC_Wait_Ack(); 
 107   1         IIC_Stop();
 108   1      }
 109          /**********************************************
 110          // IIC Write Data
 111          **********************************************/
 112          void Write_IIC_Data(unsigned char IIC_Data)
 113          {
 114   1        IIC_Start();
 115   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 116   1        IIC_Wait_Ack(); 
C51 COMPILER V9.60.0.0   OLED                                                              05/17/2020 11:34:29 PAGE 3   

 117   1        Write_IIC_Byte(0x40);     //write data
 118   1        IIC_Wait_Ack(); 
 119   1        Write_IIC_Byte(IIC_Data);
 120   1        IIC_Wait_Ack(); 
 121   1        IIC_Stop();
 122   1      }
 123          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 124          {
 125   1        if(cmd)
 126   1            {
 127   2      
 128   2         Write_IIC_Data(dat);
 129   2         
 130   2          }
 131   1        else {
 132   2         Write_IIC_Command(dat);
 133   2          
 134   2        }
 135   1      
 136   1      
 137   1      }
 138          
 139          
 140          
 141          /***********************Delay****************************************/
 142          void Delay_50ms(unsigned int Del_50ms)
 143          {
 144   1        unsigned int m;
 145   1        for(;Del_50ms>0;Del_50ms--)
 146   1          for(m=6245;m>0;m--);
 147   1      }
 148          
 149          void Delay_1ms(unsigned int Del_1ms)
 150          {
 151   1        unsigned char j;
 152   1        while(Del_1ms--)
 153   1        { 
 154   2          for(j=0;j<123;j++);
 155   2        }
 156   1      }
 157          
 158          //坐标设置
 159          
 160            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 161          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 162   1        OLED_WR_Byte((((x+2)&0xf0)>>4)|0x10,OLED_CMD);
 163   1        OLED_WR_Byte(((x+2)&0x0f),OLED_CMD); 
 164   1      }       
 165          //开启OLED显示    
 166          void OLED_Display_On(void)
 167          {
 168   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 169   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 170   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 171   1      }
 172          //关闭OLED显示     
 173          void OLED_Display_Off(void)
 174          {
 175   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 176   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 177   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 178   1      }            
C51 COMPILER V9.60.0.0   OLED                                                              05/17/2020 11:34:29 PAGE 4   

 179          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 180          void OLED_Clear(void)  
 181          {  
 182   1        u8 i,n;       
 183   1        for(i=0;i<8;i++)  
 184   1        {  
 185   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 186   2          OLED_WR_Byte (0x02,OLED_CMD);      //设置显示位置―列低地址
 187   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 188   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 189   2        } //更新显示
 190   1      }
 191          void OLED_On(void)  
 192          {  
 193   1        u8 i,n;       
 194   1        for(i=0;i<8;i++)  
 195   1        {  
 196   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 197   2          OLED_WR_Byte (0x02,OLED_CMD);      //设置显示位置―列低地址
 198   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 199   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 200   2        } //更新显示
 201   1      }
 202          
 203          //m^n函数
 204          u32 oled_pow(u8 m,u8 n)
 205          {
 206   1        u32 result=1;  
 207   1        while(n--)result*=m;    
 208   1        return result;
 209   1      }         
 210          
 211          
 212          //初始化SSD1306             
 213          void OLED_Init(void)
 214          {   
 215   1       
 216   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 217   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 218   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 219   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 220   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 221   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 222   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 223   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 224   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 225   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 226   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 227   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 228   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 229   1        OLED_WR_Byte(0x00,OLED_CMD);//
 230   1        
 231   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 232   1        OLED_WR_Byte(0x80,OLED_CMD);//
 233   1        
 234   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 235   1        OLED_WR_Byte(0x05,OLED_CMD);//
 236   1        
 237   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 238   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 239   1        
 240   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
C51 COMPILER V9.60.0.0   OLED                                                              05/17/2020 11:34:29 PAGE 5   

 241   1        OLED_WR_Byte(0x12,OLED_CMD);//
 242   1        
 243   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 244   1        OLED_WR_Byte(0x30,OLED_CMD);//
 245   1        
 246   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 247   1        OLED_WR_Byte(0x14,OLED_CMD);//
 248   1        
 249   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 250   1      }  
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          
 274          
 275          
 276          
 277          
 278          
 279          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    694    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
