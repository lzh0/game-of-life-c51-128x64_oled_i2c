C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil_c51\C51\BIN\C51.EXE main.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DEBUG 
                    -OBJECTEXTEND TABS(2)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <stdlib.h>
   3          #include "oled.h"
   4          //#include "bmp.h"
   5          #define Width 3 //128   //”Œœ∑ª≠√Ê≥ﬂ¥Á
   6          #define High 3  //64
   7          
   8          
   9          char cells[Width][High];//»´æ÷±‰¡ø0,0,0,0,1,1,1,1,2
  10          //char cell[Width+9][High+9]={0};
  11          char array_checkout_flag=0;// ˝◊È∏ﬂ∂»ºÏ≤È±Í÷æŒª
  12          
  13          void show(unsigned char begin_x,unsigned char begin_y);
  14          void startup(void);
  15          void updateWithoutInput(void);
  16          void change_array(void);
  17          char checkout_array_high(unsigned char high);
  18          
  19          
  20          int main(void){
  21   1        unsigned char z;
  22   1      
  23   1      
  24   1        array_checkout_flag=checkout_array_high(High);  //±Í÷æŒªºÏ≤È≤¢∏≥ºÏ≤È∑µªÿ÷µ
  25   1        
  26   1        OLED_Init();      //≥ı ºªØOLED  
  27   1        OLED_Clear(); 
  28   1        change_array();
  29   1        
  30   1        
  31   1        
  32   1        show(0,0);//delay_ms(100);
  33   1        
  34   1        
  35   1        
  36   1        //  ------------œÒÀÿ…®√Ë∑ΩœÚ≤‚ ‘
  37   1            OLED_Set_Pos(Width,0);
  38   1            IIC_Start();              //–≠“È∏Ò Ω
  39   1            Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
  40   1            IIC_Wait_Ack(); 
  41   1            Write_IIC_Byte(0x40);     //write data
  42   1            IIC_Wait_Ack(); 
  43   1            OLED_SCLK_Clr();
  44   1            
  45   1            for(z=0;z<8;z++){OLED_SDIN_Set();OLED_SCLK_Set();OLED_SCLK_Clr();}
  46   1            IIC_Wait_Ack(); 
  47   1            IIC_Stop(); 
  48   1      
  49   1      //---------------------------------------------------
  50   1        
  51   1        //startup();
  52   1        while (1)//’‚ «∏ˆÀ¿—≠ª∑£¨À˘”–µƒœ∏∞˚∂ØÃ¨∑±—‹ªÚÀ¿Õˆ
  53   1        {
  54   2          
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 2   

  55   2          //show(0,0);delay_ms(100);
  56   2          
  57   2          //OLED_Set_Pos(0,3);
  58   2          Write_IIC_Byte(0Xff);
  59   2          delay_ms(100);
  60   2            OLED_Clear();
  61   2          //
  62   2          //OLED_Clear(); 
  63   2          
  64   2          
  65   2            //updateWithoutInput();
  66   2      
  67   2        }
  68   1      
  69   1      
  70   1        
  71   1        
  72   1        
  73   1      }
  74          
  75          void change_array(void){
  76   1        int i,j;
  77   1        /*
  78   1        for(i=0;i<Width;i++){
  79   1          for(j=0;j<High;j++){
  80   1            cells[i][j] = 0;//rand() % 2;
  81   1          }
  82   1        }*/
  83   1        
  84   1        for(i=0;i<Width;i++){
  85   2          for(j=0;j<High;j++){
  86   3            if(j==0 || i==0 || i==Width-1 || j==High-1)
  87   3              cells[i][j] = 0;//rand() % 2;
  88   3            else
  89   3              cells[i][j] = 1;//rand() % 2;
  90   3          }
  91   2        }
  92   1        
  93   1        
  94   1      }
  95          
  96          char checkout_array_high(unsigned char high){
  97   1      //∏ﬂ∂»¥¶¿Ì£¨∏ﬂ∂»µ»”⁄0£®≤ªøº¬«£©°¢–°”⁄8°¢µ»”⁄8°¢¥Û”⁄8µ´–°”⁄8µƒ±∂ ˝°¢µ»”⁄8µƒ±∂ ˝
  98   1        if(high%8==0){  // «8µƒ’˚±∂ ˝µƒ«Èøˆ
  99   2          return 0;
 100   2        }
 101   1        else{ //≤ª «8µƒ’˚ ˝±∂«Èøˆ
 102   2          return 1; 
 103   2        }
 104   1      }
 105          
 106          void show(unsigned char begin_x,unsigned char begin_y){
 107   1        int i,j,k;
 108   1        
 109   1        
 110   1        for(k=0;k<(High/8+array_checkout_flag);k++){  //»Áπ˚ «8µƒ’˚ ˝±∂£¨‘Ú≤ª”√π‹£ª»Áπ˚≤ª «8µƒ’˚ ˝±∂«Èøˆ£¨µ√∂‡œÚœ¬
             -…®√Ë“ª––£¨“‘¥¶¿Ì”‡ ˝≤ø∑÷
 111   2          
 112   2          OLED_Set_Pos(begin_x,begin_y+k);
 113   2          
 114   2          for(j=0;j<Width;j++){
 115   3            
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 3   

 116   3            IIC_Start();              //–≠“È∏Ò Ω
 117   3            Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 118   3            IIC_Wait_Ack(); 
 119   3            Write_IIC_Byte(0x40);     //write data
 120   3            IIC_Wait_Ack(); 
 121   3            OLED_SCLK_Clr();
 122   3            
 123   3            for(i=0;i<8;i++){ //”…”⁄≈≈œﬂ‘⁄œ¬µƒ◊¥Ã¨œ¬£¨√ø¡–œÒÀÿµƒ…®√Ë∑ΩœÚŒ™¥”œ¬µΩ…œ£¨À˘“‘◊˜¥À–ﬁ∏ƒ
 124   4            
 125   4              /*OLED_SDIN_Set();*/
 126   4              
 127   4              if((k*8+7-i)<(High)){ //”√”⁄±‹√‚‘ΩΩÁ  //µ±k=0,i=0 ±À˘µ√÷µ£¨ª·”Îµ±k=1,i=7 ±À˘µ√÷µœ‡Õ¨£¨º¥¥Ê‘⁄÷ÿ∏¥¥Ú”°
 128   5                if(cells[j][k*8+7-i]==0){OLED_SDIN_Set();}  //”√”⁄ º÷’≈–∂œ◊Ó◊Û±ﬂŒª…œµƒ ˝æ›£¨”Î‘ÀÀ„£¨œ‡Õ¨‘ÚÀµ√˜∏√ŒªŒ™1£
             -¨…Ë÷√∏ﬂµÁ∆Ω£®¡¡£©£¨∑Ò‘Ú…Ë÷√µÕµÁ∆Ω£®√£©
 129   5                else OLED_SDIN_Clr();
 130   5                }
 131   4              else OLED_SDIN_Clr();
 132   4              
 133   4              
 134   4              OLED_SCLK_Set();
 135   4              OLED_SCLK_Clr();
 136   4            }
 137   3      
 138   3      
 139   3            IIC_Wait_Ack(); 
 140   3            IIC_Stop();
 141   3            //delay_ms(100);
 142   3            
 143   3          }
 144   2        }
 145   1      
 146   1      }
 147          
 148          
 149          
 150          
 151          
 152          void startup(void)// ˝æ›≥ı ºªØ
 153          {
 154   1          int i, j;
 155   1          for (i = 0; i < High; i++)
 156   1              for (j = 0; j < Width; j++)
 157   1              {
 158   2                  cells[i][j] = rand() % 2;
 159   2              }
 160   1      }
 161          
 162          
 163          
 164          void updateWithoutInput(void)
 165          {
 166   1          unsigned char NewCells[High][Width];
 167   1          int NeibourNumber;
 168   1          int i, j;
 169   1          for (i = 1; i <= High - 1; i++)
 170   1          {
 171   2              for (j = 0; j < Width; j++)
 172   2              {
 173   3                  NeibourNumber = cells[i - 1][j - 1] + cells[i - 1][j] + cells[i - 1][j + 1] + cells[i][j - 1] 
             -+ cells[i][j + 1] + cells[i + 1][j - 1] + cells[i + 1][j] + cells[i + 1][j + 1];
 174   3                  if (NeibourNumber == 3)
 175   3                      NewCells[i][j] = 1;
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 4   

 176   3                  else if (NeibourNumber == 2)
 177   3                      NewCells[i][j] = cells[i][j];
 178   3                  else
 179   3                      NewCells[i][j] = 0;
 180   3              }
 181   2          }
 182   1          for (i = 1; i <= High - 1; i++)
 183   1              for (j = 0; j < Width; j++)
 184   1                  cells[i][j] = NewCells[i][j];
 185   1      }
 186          
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          
 211          
 212          
 213          
 214          
 215          
 216            /*
 217            
 218          unsigned int j=0;
 219          unsigned char x,y;
 220          unsigned char x0,y0,x1,y1;
 221            
 222            
 223          void main(void){
 224            OLED_Init();      //≥ı ºªØOLED  
 225            OLED_Clear(); 
 226            OLED_Set_Pos(0,0);
 227          
 228            //OLED_DrawBMP(0,0,128,8,BMP1);
 229            
 230          
 231            for(i=0;i<=16;i++){
 232              OLED_WR_Byte(t++,1);
 233              //delay_ms(50);
 234            }
 235            
 236            OLED_Set_Pos(0,1);
 237            for(i=0;i<=256;i++){
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 5   

 238              OLED_WR_Byte(i,1);
 239            } 
 240            
 241            OLED_Set_Pos(0,2);
 242            OLED_WR_Byte(0,1);
 243            OLED_WR_Byte(0,1);
 244            OLED_WR_Byte(0xff,1);
 245          
 246            
 247            
 248            for(t=0;t<=255;t++){
 249          
 250              
 251              
 252              //OLED_WR_Byte(t,1);
 253              //delay_ms(25);
 254              
 255              
 256              IIC_Start();              //–≠“È∏Ò Ω
 257              Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 258              IIC_Wait_Ack(); 
 259              Write_IIC_Byte(0x40);     //write data
 260              IIC_Wait_Ack(); 
 261              
 262              //Write_IIC_Byte(IIC_Data); //À˘–¥ ˝æ›¥´»Î£¨ƒ⁄»›∫Ø ˝Œ™£∫Write_IIC_Byte(unsigned char IIC_Byte)£¨“‘œ¬Œ™Wr
             -ite_IIC_Byte∏√∫Ø ˝ƒ⁄»›:
 263              da=0xff;  // ˝æ›¥´»Î£¨∏¥÷∆±∏∑›
 264              OLED_SCLK_Clr();
 265              for(i=0;i<8;i++){
 266                
 267                //OLED_SDIN_Set();  //”√”⁄øÿ÷∆œÒÀÿµ„µƒ¡¡
 268                //OLED_SDIN_Clr();  //”√”⁄øÿ÷∆œÒÀÿµ„µƒ√
 269                
 270                m=da;
 271                //  OLED_SCLK_Clr();
 272                m=m&0x80;
 273                if(m==0x80){OLED_SDIN_Set();} //”√”⁄ º÷’≈–∂œ◊Ó◊Û±ﬂŒª…œµƒ ˝æ›£¨”Î‘ÀÀ„£¨œ‡Õ¨‘ÚÀµ√˜∏√ŒªŒ™1£¨…Ë÷√∏ﬂµÁ∆Ω£®¡¡
             -£©£¨∑Ò‘Ú…Ë÷√µÕµÁ∆Ω£®√£©
 274                else OLED_SDIN_Clr();
 275                
 276                da=da<<1;  //◊Û“∆£¨∏¸–¬◊Ó◊Û≤‡Œª…œµƒ ˝æ›£¨“‘”√”⁄œ¬¥Œ≈–∂œ£¨≤¢“‘¥À…Ë÷√¡¡√°£ 
 277                
 278                OLED_SCLK_Set();
 279                OLED_SCLK_Clr();
 280                
 281              }
 282              
 283              IIC_Wait_Ack(); 
 284              IIC_Stop();
 285              
 286              
 287          }
 288              
 289            
 290              
 291          
 292            /*
 293          
 294           
 295          //”…∫Ø ˝//OLED_ShowCHinese(0,0,0);ƒÊÕ∆µ√µΩ£∫ƒ≥∫∫◊÷µƒ…œ∞Î≤ø∑÷œ‘ æÀ˘–Ë”Ôæ‰
 296          //“‘œ¬∑≈”⁄main()∫Ø ˝Õ‚
 297          unsigned char x=0,y=0;
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 6   

 298          unsigned int t=0;
 299          unsigned int i;
 300          unsigned char m,da;
 301          unsigned char code test[][32]={ //"÷–",0
 302            {0xff,0x00,0xF0,0x10,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00},
 303            {0x00,0x00,0x0F,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x0F,0x00,0x00,0x00},
 304          };
 305          //“‘…œ∑≈”⁄main()∫Ø ˝Õ‚
 306          
 307          
 308          
 309          
 310          
 311          
 312            OLED_Set_Pos(x,y);  //œ‘ æ∫∫◊÷µƒ…œ∞Î≤ø∑÷
 313            
 314            for(t=0;t<16;t++){
 315              //OLED_WR_Byte(test[2*no][t],1);//µ⁄∂˛∏ˆ≤Œ ˝1±Ì æ–¥ ˝æ›£¨0Œ™–¥√¸¡Ó£¨ƒ⁄»›Œ™£∫Write_IIC_Data(dat);
 316              //Write_IIC_Data(dat);  //“‘œ¬Œ™Write_IIC_Data(dat);µƒ∫Ø ˝ƒ⁄»›
 317              
 318              IIC_Start();              //–≠“È∏Ò Ω
 319              Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 320              IIC_Wait_Ack(); 
 321              Write_IIC_Byte(0x40);     //write data
 322              IIC_Wait_Ack(); 
 323              
 324              //Write_IIC_Byte(IIC_Data); //À˘–¥ ˝æ›¥´»Î£¨ƒ⁄»›∫Ø ˝Œ™£∫Write_IIC_Byte(unsigned char IIC_Byte)£¨“‘œ¬Œ™Wr
             -ite_IIC_Byte∏√∫Ø ˝ƒ⁄»›:
 325              da=test[2*no][t]; // ˝æ›¥´»Î£¨∏¥÷∆±∏∑›
 326              OLED_SCLK_Clr();
 327              for(i=0;i<8;i++){
 328                m=da;
 329                //  OLED_SCLK_Clr();
 330                m=m&0x80;
 331                if(m==0x80){OLED_SDIN_Set();}
 332                else OLED_SDIN_Clr();
 333                da=da<<1;
 334                OLED_SCLK_Set();
 335                OLED_SCLK_Clr();
 336              }
 337              
 338              
 339              
 340              
 341              IIC_Wait_Ack(); 
 342              IIC_Stop();
 343          
 344            } 
 345            //--------------------------------------------------------------------------
 346            OLED_Set_Pos(x,y+1);  //œ‘ æ∫∫◊÷µƒœ¬∞Î≤ø∑÷
 347            for(t=0;t<16;t++)
 348            { 
 349              OLED_WR_Byte(test[2*no+1][t],1);
 350            }
 351          
 352            while(1){}
 353            
 354          }
 355          
 356          */
 357          
 358          
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 7   

 359          
 360          
 361          
 362          
 363          
 364          
 365          
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          /*
 378           int main(void)
 379           {
 380              OLED_Init();      //≥ı ºªØOLED  
 381              OLED_Clear(); OLED_ShowCHinese(0,0,0);//÷–
 382              //Delay_1ms(1000);
 383             
 384          
 385             OLED_Init();     //≥ı ºªØOLED  
 386              OLED_Clear(); 
 387              x=64;y=4;
 388              OLED_Set_Pos(x,y);
 389              for(t=0;t<16;t++)
 390              {
 391                //OLED_WR_Byte(test[2*no][t],1);//1Œ™–¥ ˝æ›£¨0Œ™–¥√¸¡Ó
 392                //Write_IIC_Data(test[2*no][t]);
 393                //Write_IIC_Byte(test[2*no][t]);
 394                
 395                IIC_Start();
 396                Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 397                IIC_Wait_Ack();
 398                Write_IIC_Byte(0x40);     //write data
 399                IIC_Wait_Ack();
 400                
 401                da=(test[2*no][t]);
 402                OLED_SCL=0;
 403                for(i=0;i<8;i++)
 404                {
 405                  m=da;
 406                  //  OLED_SCL=0;
 407                  m=m&0x80;
 408                  if(m==0x80){OLED_SDIN=1;}
 409                  else OLED_SDIN=0;
 410                  da=da<<1;
 411                  OLED_SCL=1;
 412                  OLED_SCL=0;
 413                }
 414                IIC_Wait_Ack();
 415                IIC_Stop();
 416                
 417                  //adder+=1;
 418               }
 419              //∫∫◊÷œ¬∞Î≤ø∑÷œ‘ æÀ˘–Ë”Ôæ‰
 420              OLED_Set_Pos(x,y+1);
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 8   

 421              for(t=0;t<16;t++)
 422                {
 423                  OLED_WR_Byte(test[2*no+1][t],OLED_DATA);
 424                  adder+=1;
 425                }
 426             
 427          
 428          
 429            //”…∫Ø ˝//OLED_DrawBMP(0,0,128,8,BMP1);ƒÊÕ∆µ√µΩ
 430            x0=y0=0;  //∆µ„Œª÷√
 431            x1=128;y1=64; //∆¡ƒª¥Û–°128*64
 432            
 433            if(y1%8==0) y=y1/8;
 434            else y=y1/8+1;
 435            for(y=y0;y<y1;y++)
 436            {
 437              OLED_Set_Pos(x0,y);
 438              if(j>0xfd){j=0;}
 439              for(x=x0;x<x1;x++){
 440                
 441              //OLED_WR_Byte(BMP[j++],OLED_DATA);
 442              //OLED_WR_Byte(unsigned dat,1);
 443              //Write_IIC_Data(dat);
 444              IIC_Start();
 445              Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
 446              IIC_Wait_Ack();
 447              Write_IIC_Byte(0x40);     //write data
 448              IIC_Wait_Ack();
 449                
 450              //Write_IIC_Byte(IIC_Data);
 451              unsigned char i;
 452              unsigned char m,da;
 453              da=IIC_Byte;
 454              OLED_SCL=0;
 455              for(i=0;i<8;i++)
 456              {
 457                m=da;
 458                //  OLED_SCL=0;
 459                m=m&0x80;
 460                
 461                if(m==0x80){OLED_SDIN=1;}
 462                else OLED_SDIN=0;
 463                
 464                da=da<<1;
 465                OLED_SCL=1;
 466                OLED_SCL=0;
 467              }
 468                
 469              IIC_Wait_Ack();
 470              IIC_Stop();
 471                
 472                
 473              }
 474            }
 475          }
 476            */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1381    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10      23
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2020 15:55:47 PAGE 9   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
